
"""init schema

Revision ID: d528c7d7752a
Revises: 
Create Date: 2025-10-21 18:10:03.958472

"""
from alembic import op
import sqlalchemy as sa
# 经常需要 pg 特性
from sqlalchemy.dialects import postgresql


# revision identifiers, used by Alembic.
revision = 'd528c7d7752a'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('freight_calc_config',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('adjust_threshold', sa.Numeric(precision=10, scale=4), nullable=False),
    sa.Column('adjust_rate', sa.Numeric(precision=10, scale=4), nullable=False),
    sa.Column('remote_1', sa.Integer(), nullable=False),
    sa.Column('remote_2', sa.Integer(), nullable=False),
    sa.Column('wa_r', sa.Integer(), nullable=False),
    sa.Column('weighted_ave_shipping_weights', sa.Numeric(precision=10, scale=4), nullable=False),
    sa.Column('weighted_ave_rural_weights', sa.Numeric(precision=10, scale=4), nullable=False),
    sa.Column('cubic_factor', sa.Numeric(precision=10, scale=4), nullable=False),
    sa.Column('cubic_headroom', sa.Numeric(precision=10, scale=4), nullable=False),
    sa.Column('price_ratio', sa.Numeric(precision=10, scale=4), nullable=False),
    sa.Column('med_dif_10', sa.Numeric(precision=10, scale=4), nullable=False),
    sa.Column('med_dif_20', sa.Numeric(precision=10, scale=4), nullable=False),
    sa.Column('med_dif_40', sa.Numeric(precision=10, scale=4), nullable=False),
    sa.Column('same_shipping_0', sa.Numeric(precision=10, scale=4), nullable=False),
    sa.Column('same_shipping_10', sa.Numeric(precision=10, scale=4), nullable=False),
    sa.Column('same_shipping_20', sa.Numeric(precision=10, scale=4), nullable=False),
    sa.Column('same_shipping_30', sa.Numeric(precision=10, scale=4), nullable=False),
    sa.Column('same_shipping_50', sa.Numeric(precision=10, scale=4), nullable=False),
    sa.Column('same_shipping_100', sa.Numeric(precision=10, scale=4), nullable=False),
    sa.Column('shopify_threshold', sa.Numeric(precision=10, scale=4), nullable=False),
    sa.Column('shopify_config1', sa.Numeric(precision=10, scale=4), nullable=False),
    sa.Column('shopify_config2', sa.Numeric(precision=10, scale=4), nullable=False),
    sa.Column('kogan_au_normal_low_denom', sa.Numeric(precision=10, scale=4), nullable=False),
    sa.Column('kogan_au_normal_high_denom', sa.Numeric(precision=10, scale=4), nullable=False),
    sa.Column('kogan_au_extra5_discount', sa.Numeric(precision=10, scale=4), nullable=False),
    sa.Column('kogan_au_vic_half_factor', sa.Numeric(precision=10, scale=4), nullable=False),
    sa.Column('k1_threshold', sa.Numeric(precision=10, scale=4), nullable=False),
    sa.Column('k1_discount_multiplier', sa.Numeric(precision=10, scale=4), nullable=False),
    sa.Column('k1_otherwise_minus', sa.Numeric(precision=10, scale=4), nullable=False),
    sa.Column('kogan_nz_service_no', sa.Integer(), nullable=False),
    sa.Column('kogan_nz_config1', sa.Numeric(precision=10, scale=4), nullable=False),
    sa.Column('kogan_nz_config2', sa.Numeric(precision=10, scale=4), nullable=False),
    sa.Column('kogan_nz_config3', sa.Numeric(precision=10, scale=4), nullable=False),
    sa.Column('weight_calc_divisor', sa.Numeric(precision=10, scale=4), nullable=False),
    sa.Column('weight_tolerance_ratio', sa.Numeric(precision=10, scale=4), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_freight_calc_config'))
    )
    op.create_table('freight_runs',
    sa.Column('id', sa.String(length=32), nullable=False),
    sa.Column('status', sa.Enum('pending', 'running', 'completed', 'failed', 'canceled', name='freight_run_status', create_constraint=True), nullable=False),
    sa.Column('triggered_by', sa.String(length=32), nullable=True),
    sa.Column('total_batches', sa.Integer(), nullable=False),
    sa.Column('finished_batches', sa.Integer(), nullable=False),
    sa.Column('rows_in', sa.Integer(), nullable=False),
    sa.Column('rows_changed', sa.Integer(), nullable=False),
    sa.Column('error_summary', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_freight_runs'))
    )
    op.create_table('kogan_sku_freight_fee',
    sa.Column('sku_code', sa.String(length=64), nullable=False),
    sa.Column('adjust', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('same_shipping', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('shipping_ave', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('shipping_ave_m', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('shipping_ave_r', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('shipping_med', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('remote_check', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('rural_ave', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('weighted_ave_s', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('shipping_med_dif', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('weight', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('cubic_weight', sa.Numeric(precision=10, scale=3), nullable=True),
    sa.Column('shipping_type', sa.String(length=24), nullable=True),
    sa.Column('selling_price', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('shopify_price', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('kogan_au_price', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('kogan_k1_price', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('kogan_nz_price', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('attrs_hash_last_calc', sa.String(length=32), nullable=True),
    sa.Column('last_changed_run_id', sa.String(length=32), nullable=True),
    sa.Column('last_changed_source', sa.String(length=32), nullable=True),
    sa.Column('last_changed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('kogan_dirty', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('sku_code', name=op.f('pk_kogan_sku_freight_fee'))
    )
    op.create_index('ix_kogan_dirty_source', 'kogan_sku_freight_fee', ['kogan_dirty', 'last_changed_source'], unique=False)
    op.create_index('ix_kogan_dirty_true_only', 'kogan_sku_freight_fee', ['sku_code'], unique=False, postgresql_where=sa.text('kogan_dirty = true'))
    op.create_index(op.f('ix_kogan_sku_freight_fee_last_changed_run_id'), 'kogan_sku_freight_fee', ['last_changed_run_id'], unique=False)
    op.create_table('kogan_template',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('sku', sa.String(length=128), nullable=False),
    sa.Column('price', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('rrp', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('kogan_first_price', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('handling_days', sa.Integer(), nullable=True),
    sa.Column('barcode', sa.String(length=128), nullable=True),
    sa.Column('stock', sa.Integer(), nullable=True),
    sa.Column('shipping', sa.String(length=128), nullable=True),
    sa.Column('weight', sa.Numeric(precision=10, scale=3), nullable=True),
    sa.Column('brand', sa.String(length=128), nullable=True),
    sa.Column('title', sa.String(length=512), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('subtitle', sa.String(length=512), nullable=True),
    sa.Column('whats_in_the_box', sa.Text(), nullable=True),
    sa.Column('sku2', sa.String(length=128), nullable=True),
    sa.Column('category', sa.String(length=256), nullable=True),
    sa.Column('country_type', sa.Enum('AU', 'NZ', name='country_type_enum'), server_default='AU', nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_kogan_template'))
    )
    op.create_index(op.f('ix_kogan_template_sku'), 'kogan_template', ['sku'], unique=False)
    op.create_index('ix_kogan_template_sku_unique', 'kogan_template', ['sku'], unique=False)
    op.create_table('product_sync_runs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('run_type', sa.String(length=32), nullable=True),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('shopify_bulk_id', sa.String(length=64), nullable=True),
    sa.Column('shopify_bulk_status', sa.String(length=32), nullable=True),
    sa.Column('shopify_bulk_url', sa.Text(), nullable=True),
    sa.Column('total_shopify_skus', sa.Integer(), nullable=True),
    sa.Column('changed_count', sa.Integer(), nullable=True),
    sa.Column('note', sa.String(), nullable=True),
    sa.Column('started_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('finished_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('webhook_received_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_product_sync_runs'))
    )
    op.create_index('idx_sync_run_status', 'product_sync_runs', ['status', 'created_at'], unique=False)
    op.create_table('schedules',
    sa.Column('key', sa.String(length=64), nullable=False),
    sa.Column('enabled', sa.Boolean(), nullable=False),
    sa.Column('day_of_week', sa.String(length=3), nullable=False),
    sa.Column('hour', sa.Integer(), nullable=False),
    sa.Column('minute', sa.Integer(), nullable=False),
    sa.Column('every_2_weeks', sa.Boolean(), nullable=False),
    sa.Column('timezone', sa.String(length=64), nullable=False),
    sa.Column('last_run_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.CheckConstraint("day_of_week IN ('MON','TUE','WED','THU','FRI','SAT','SUN')", name=op.f('ck_schedules_ck_schedules_dow')),
    sa.CheckConstraint('hour >= 0 AND hour <= 23', name=op.f('ck_schedules_ck_schedules_hour')),
    sa.CheckConstraint('minute >= 0 AND minute <= 59', name=op.f('ck_schedules_ck_schedules_minute')),
    sa.PrimaryKeyConstraint('key', name=op.f('pk_schedules'))
    )
    op.create_index('ix_schedules_enabled_time', 'schedules', ['enabled', 'day_of_week', 'hour', 'minute'], unique=False)
    op.create_table('sku_info',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('sku_code', sa.String(length=255), nullable=False),
    sa.Column('shopify_variant_id', sa.String(length=255), nullable=True),
    sa.Column('stock_qty', sa.Integer(), nullable=False),
    sa.Column('price', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('rrp_price', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('special_price', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('special_price_end_date', sa.Date(), nullable=True),
    sa.Column('shopify_price', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('product_tags', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'[]'::jsonb"), nullable=False),
    sa.Column('brand', sa.String(length=255), nullable=True),
    sa.Column('weight', sa.Numeric(precision=10, scale=3), nullable=True),
    sa.Column('length', sa.Numeric(precision=10, scale=3), nullable=True),
    sa.Column('width', sa.Numeric(precision=10, scale=3), nullable=True),
    sa.Column('height', sa.Numeric(precision=10, scale=3), nullable=True),
    sa.Column('ean_code', sa.String(length=255), nullable=True),
    sa.Column('supplier', sa.String(length=255), nullable=True),
    sa.Column('freight_act', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('freight_nsw_m', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('freight_nsw_r', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('freight_nt_m', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('freight_nt_r', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('freight_qld_m', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('freight_qld_r', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('remote', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('freight_sa_m', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('freight_sa_r', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('freight_tas_m', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('freight_tas_r', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('freight_vic_m', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('freight_vic_r', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('freight_wa_m', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('freight_wa_r', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('freight_nz', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('attrs_hash_current', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('last_changed_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_sku_info'))
    )
    op.create_index('idx_sku_info_last_changed_at', 'sku_info', ['last_changed_at'], unique=False)
    op.create_index('idx_sku_info_special_end', 'sku_info', ['special_price_end_date'], unique=False)
    op.create_index('idx_sku_info_variant_id', 'sku_info', ['shopify_variant_id'], unique=False)
    op.create_index(op.f('ix_sku_info_shopify_variant_id'), 'sku_info', ['shopify_variant_id'], unique=False)
    op.create_index(op.f('ix_sku_info_sku_code'), 'sku_info', ['sku_code'], unique=True)
    op.create_table('users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('username', sa.String(length=64), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('full_name', sa.String(length=128), nullable=True),
    sa.Column('is_active', sa.Boolean(), server_default=sa.text('true'), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_users'))
    )
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('product_sync_candidates',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('run_id', sa.UUID(), nullable=False),
    sa.Column('sku_code', sa.String(length=64), nullable=False),
    sa.Column('change_mask', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), nullable=False),
    sa.Column('new_snapshot', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), nullable=False),
    sa.Column('change_count', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.CheckConstraint("(jsonb_typeof(new_snapshot) = 'object') AND (change_count > 0)", name=op.f('ck_product_sync_candidates_ck_psc_non_empty')),
    sa.ForeignKeyConstraint(['run_id'], ['product_sync_runs.id'], name=op.f('fk_product_sync_candidates_run_id_product_sync_runs'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_product_sync_candidates')),
    sa.UniqueConstraint('run_id', 'sku_code', name='ux_psc_run_sku')
    )
    op.create_index('gin_psc_change_mask', 'product_sync_candidates', ['change_mask'], unique=False, postgresql_using='gin')
    op.create_index(op.f('ix_product_sync_candidates_run_id'), 'product_sync_candidates', ['run_id'], unique=False)
    op.create_index(op.f('ix_product_sync_candidates_sku_code'), 'product_sync_candidates', ['sku_code'], unique=False)
    op.create_index('ix_psc_lower_sku', 'product_sync_candidates', [sa.text('LOWER(sku_code)')], unique=False)
    op.create_index('ix_psc_run_created_desc', 'product_sync_candidates', ['run_id', sa.text('created_at DESC')], unique=False)
    op.create_table('product_sync_chunks',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('run_id', sa.UUID(), nullable=False),
    sa.Column('chunk_idx', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=16), server_default=sa.text("'pending'"), nullable=False),
    sa.Column('sku_codes', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'[]'::jsonb"), nullable=False),
    sa.Column('sku_count', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.Column('dsz_missing', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.Column('dsz_failed_batches', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.Column('dsz_failed_skus', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.Column('dsz_requested_total', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.Column('dsz_returned_total', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.Column('dsz_missing_sku_list', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'[]'::jsonb"), nullable=False),
    sa.Column('dsz_failed_sku_list', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'[]'::jsonb"), nullable=False),
    sa.Column('dsz_extra_sku_list', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'[]'::jsonb"), nullable=False),
    sa.Column('started_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('finished_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_error', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['run_id'], ['product_sync_runs.id'], name=op.f('fk_product_sync_chunks_run_id_product_sync_runs'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_product_sync_chunks')),
    sa.UniqueConstraint('run_id', 'chunk_idx', name='ux_pschunk_run_idx')
    )
    op.create_index(op.f('ix_product_sync_chunks_run_id'), 'product_sync_chunks', ['run_id'], unique=False)
    op.create_index('ix_pschunk_run_idx', 'product_sync_chunks', ['run_id', 'chunk_idx'], unique=False)
    op.create_index('ix_pschunk_run_status_idx', 'product_sync_chunks', ['run_id', 'status', 'chunk_idx'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_pschunk_run_status_idx', table_name='product_sync_chunks')
    op.drop_index('ix_pschunk_run_idx', table_name='product_sync_chunks')
    op.drop_index(op.f('ix_product_sync_chunks_run_id'), table_name='product_sync_chunks')
    op.drop_table('product_sync_chunks')
    op.drop_index('ix_psc_run_created_desc', table_name='product_sync_candidates')
    op.drop_index('ix_psc_lower_sku', table_name='product_sync_candidates')
    op.drop_index(op.f('ix_product_sync_candidates_sku_code'), table_name='product_sync_candidates')
    op.drop_index(op.f('ix_product_sync_candidates_run_id'), table_name='product_sync_candidates')
    op.drop_index('gin_psc_change_mask', table_name='product_sync_candidates', postgresql_using='gin')
    op.drop_table('product_sync_candidates')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_sku_info_sku_code'), table_name='sku_info')
    op.drop_index(op.f('ix_sku_info_shopify_variant_id'), table_name='sku_info')
    op.drop_index('idx_sku_info_variant_id', table_name='sku_info')
    op.drop_index('idx_sku_info_special_end', table_name='sku_info')
    op.drop_index('idx_sku_info_last_changed_at', table_name='sku_info')
    op.drop_table('sku_info')
    op.drop_index('ix_schedules_enabled_time', table_name='schedules')
    op.drop_table('schedules')
    op.drop_index('idx_sync_run_status', table_name='product_sync_runs')
    op.drop_table('product_sync_runs')
    op.drop_index('ix_kogan_template_sku_unique', table_name='kogan_template')
    op.drop_index(op.f('ix_kogan_template_sku'), table_name='kogan_template')
    op.drop_table('kogan_template')
    op.drop_index(op.f('ix_kogan_sku_freight_fee_last_changed_run_id'), table_name='kogan_sku_freight_fee')
    op.drop_index('ix_kogan_dirty_true_only', table_name='kogan_sku_freight_fee', postgresql_where=sa.text('kogan_dirty = true'))
    op.drop_index('ix_kogan_dirty_source', table_name='kogan_sku_freight_fee')
    op.drop_table('kogan_sku_freight_fee')
    op.drop_table('freight_runs')
    op.drop_table('freight_calc_config')
    # ### end Alembic commands ###
